nodejs : v20.12.2
angular: 17
ng-zorro:

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
========= 1. Payment-hub-shell =========
// ssh clone
git clone git@github.com:vanh190599/payment-hub-add.git

// https clone
https://github.com/vanh190599/payment-hub-add.git

// create project
ng new --no-standalone payment-hub-shell
-> SCSS

// ng-zorro (ant design)
ng add ng-zorro-antd
-> khong chay bang npm, phai chay ng

# After
	- lược bớt  class -> chuyển css tổng
	- format scss
	- card title => doi len tren
	- layout: bỏ header cũ -> dùng được nz-layout thì tốt
	- footer
	- check button có vấn đề
	- inputs border
	- tách css custom - style tổng common.css
	- responsive
	- content ra giua man hinh
	- dua breacum vao content
	- "Tài khoản trích nợ 1" -> tạo khoảng cách trống phần text note -> đối ứng


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
========= 2. Payment-hub-search =========
$ ng new payment-hub-search --no-standalone
$ ng generate module search
$ ng add @angular-architects/module-federation --project payment-hub-create --port 4202 --type remote
$ ng generate module create
$ ng generate component create/create


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
========= 3. Payment-hub-add =========
ng new payment-hub-create --no-standalone

$ ng new payment-hub-create --no-standalone
$ ng add ng-zorro-antd
$ ng add @angular-architects/module-federation --project payment-hub-create --port 4202 --type remote
$ ng generate module create
$ ng generate component create/create







------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# ghép mfe
- shell:
	cmd:
		ng generate component layout/header
		ng generate component layout/footer
		ng generate component layout/sidebar
		ng generate component layout/main-layout
		ng generate component home
		ng generate component dashboard
	step1:
		install ng-zerro
		-> dựng layout:
			header
			footer
			main-layout...

	step2: install angular-architec/federation
	
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# thứ tự cài đặt quan trọng:
			- 1. ng zorro
			- 2. webpack anguakar architect: 
			-> ngược lại sẽ bị lỗi ghi đè icon => bootstrap not found

# 1493.js:1 ERROR NullInjectorError: R3InjectorError(SearchModule)[CdkConnectedOverlay -> CdkConnectedOverlay -> CdkConnectedOverlay]: 
			NullInjectorError: No provider for CdkConnectedOverlay!
  
-> Fix: app shell -> import { CdkConnectedOverlay } from '@angular/cdk/overlay'; 
			=> provider: [CdkConnectedOverlay]
		
# Uncaught SyntaxError: Cannot use 'import.meta' outside a module
			=> webpack.js
			module.exports.output = {
				publicPath: "auto",
				scriptType: "text/javascript",
			};
			=> chưa fix được, ok bên mfe thì lỗi bên shell
	
# Tại sao phải có kiến ​​trúc CSS tốt bên trong ứng dụng Angular?

# đưa css custom vào components
	:host ::ng-deep
	
# CSS chung
	- do vậy nên khi e build MFE framework e phải có cái style chung
	- 1 số style guides là:
	+ hạn chế global css nhiều nhất có thể
	+ nếu là Angular thì nên để mặc định (Emulated CSS)
	....
	
	- nếu là Angular mà buộc phải dùng global css  thì phải đặt trong :host

# gom vào loader
	loader.ts

# ý tưởng load route động theo config mf.manifest (Angular architect)
	- https://www.angulararchitects.io/en/blog/dynamic-module-federation-with-angular/

# loader ts:

# fallback:
	+ lỗi ở shell?
	+ lỗi ở mfe?
	
	
# 1 số cái sau cần làm chỉn chủ vì hầu như mfe nào cũng cần:
	- loader.ts: 
		+ đưa ra 1 chuẩn viết để các mfe follow theo.
		-> force lazyload (vì nếu mfe nó cố tình declare import sync thì cũng khó)
	- merge route: 
		+ dành cho Angular, nếu host app là angular. 
		+ Khi mfe là react với react router hay vue với router thì nó ko hiểu angular router là gì
			=> như vậy thì e sẽ cần có cơ chế để nhập router từ các framework khác vào angular (Pending`)
		-> (cái này nên làm ở loader.ts, cố gắng làm sao dynamic import để nó lazy thì tốt)
	- với những framework như vue, nó có plugin thì support làm sao? Khai báo ntn
	- API call conflict:
		+ nhiều mfe có tỉ api và rất dễ conflict, cộng thêm api đi tới backend của từng mfe riêng vậy auth sẽ rất loạn
		=> cái này có thể làm kiểu api cho đi qua hết app shell, auth 1 chỗ thôi, mỗi mfe register backend url vuat nó với app shell)
	- styles: 
		+ nếu đc thì chọn 1 cái ui lib nào đó support nhiều framework và đa dạng component, ví dụ a dùng PrimeNG, nó có primereact, primevue, angular… như vậy thì style của cả app shell sẽ đồng nhất và hanh chế conflict (tất nhiên cái này khó ví như vậy là mình force mfe rồi, mất sự tự do)
	- Deployment pipeline
		-> nên viết pipeline để dùng chung cho mfe để họ khỏi phải tự viết.


cái này chắc e phải dùng (hoặc build) 1 cái event registry (kiểu event bus, service,...) để bắn event đi trong app của e.
ví dụ như dùng 1 cái share observable


# breacum service?
	- triển khai service ở shell


# i18n: ngx-translate
	- https://github.com/ngx-translate/core?tab=readme-ov-file#installation
	- update ở shell => con thay đổi

	(*) vấn đề: 
		1) File size / tải chung 
			- 1 file ngôn ngữ có thể quá lớn khi scale up
				=> viết service để tách theo module hoặc từng components?
					+ mỗi comp/module sẽ tải bản dịch tương ứng.
			- link:
				+ cách tải các tệp riêng biệt cho mỗi module: https://github.com/ngx-translate/core/issues/411
				+ Cách tải các tệp dịch riêng biệt cho mỗi mô-đun: https://github.com/ngx-translate/core/issues/411
				
		2) tải sai url
			- TH: mfe load ở shell => khi get json của thì bị sai domain
			ví dụ: 
				http://mfe-domain/i18n-mfe/vi.json
				-> shel: 
					http://shell-domain/i18n-mfe/vi.json
					-> tự động ăn path của shell, do thông qua assest		
						
			=> Phương án:
				1) Code CustomLoader / loader
					- fix: domain-mfe
				2) load trực tiếp module:
					+ import json as module: import * as jsonData from '../assets/i18n/vi.json'; // Import JSON data
					+ load vào ngx-stranslate
				# expert:
					import => trả về 1 url
					module.exports.module = {
					
					// module
					import i18n from "/json"
					
					// webpack.config.js
					rules: [
						{
						  test: /\.json$/,
						  type: 'asset/resource', // chỉ định file JSON không parse chúng thành object
						  generator: {
							filename: 'assets/i18n/[name][ext]',
						  },
						},
					  ],
					}
					
					// config TS
					"resolveJsonModule": true,
	
	
	# flow:
		- sử dụng: 
			+ localStorage 
			+ CusotmEvent: phát sự kiện từ shell -> mfe
		
	# tách shell
	
	
# file env / config system / hàm common, filter...
	- env: https://www.digitalocean.com/community/tutorials/angular-environment-variables